openapi: 3.0.0
info:
  title: Item and Tag API
  version: 1.0.0
servers:
  - url: 'https://api.example.com/v1'

tags:
  - name: "認証系"
    description: "ユーザーのアカウント制御"
  - name: "物品系"
    description: "ユーザーのアカウント制御"
  - name: "アイテムタグ系"
    description: "アイテムタグの管理"
  - name: "貸し出し系"
    description: 貸し出されたアイテムに関する制御

paths:
  /auth/login:
    post:
      tags: 
        - 認証系
      summary: Log in to the user account
      requestBody:
        description: User login data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
  /auth/logout:
    post:
      tags: 
        - 認証系
      summary: Log out from the user account
      responses:
        '204':
          description: Successful operation
  /auth/register:
    post:
      tags: 
        - 認証系
      summary: Register a new user account
      requestBody:
        description: User registration data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
  /auth/delete:
    delete:
      tags: 
        - 認証系
      summary: Delete the user's own account
      responses:
        '204':
          description: Successful operation


  /items:
    get:
      tags:
        - 物品系
      summary: アイテムの一覧を取得
      requestBody:
        description: クエリ
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id: {type:int64 }
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
    post:
      tags: 
        - 物品系
      summary: Add a new item
      requestBody:
        description: Item data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
  /items/{itemId}:
    get:
      tags: 
        - 物品系
      summary: Get item details by ID
      parameters:
        - name: itemId
          in: path
          description: ID of the item to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
    put:
      tags: 
        - 物品系
      summary: Update item details by ID
      parameters:
        - name: itemId
          in: path
          description: ID of the item to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updated item data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'               
    delete:
      tags: 
        - 物品系
      summary: Delete an item by ID
      parameters:
        - name: itemId
          in: path
          description: ID of the item to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Successful operation
  /items/{itemId}/tags:
    post:
      tags: 
        - 物品系
      summary: Add a tag to an item
      parameters:
        - name: itemId
          in: path
          description: ID of the item to be tagged
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Tag data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
  /items/{itemId}/tags/{tagId}:
    delete:
      tags: 
        - 物品系
      summary: Remove a tag from an item
      parameters:
        - name: itemId
          in: path
          description: ID of the item
          required: true
          schema:
            type: integer
            format: int64
        - name: tagId
          in: path
          description: ID of the tag to be removed
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Successful operation


  /tags:
    get:
      tags: 
        - アイテムタグ系
      summary: Get a list of tags
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'


  /items/{itemId}/borrow:
    post:
      tags: 
        - 貸し出し系
      summary: Borrow an item
      parameters:
        - name: itemId
          in: path
          description: ID of the item to be borrowed
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
  /items/{itemId}/return:
    post:
      tags: 
        - 貸し出し系
      summary: Return an item
      parameters:
        - name: itemId
          in: path
          description: ID of the item to be returned
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
  /user/borrowed-items:
    get:
      tags: 
        - 貸し出し系
      summary: Get a list of borrowed items
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'


  /admin/permissions:
    get:
      tags: 
        - AdminControl
      summary: Get a list of permissions
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'

  /admin/users/{userId}/permissions:
    get:
      tags: 
        - AdminControl
      summary: Check the user's permissions
      parameters:
        - name: userId
          in: path
          description: ID of the user to check permissions for
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'

  /admin/permission-groups:
    post:
      tags: 
        - AdminControl
      summary: Create a new permission group
      requestBody:
        description: Permission group data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionGroup'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
  /admin/permission-groups/{groupId}:
    delete:
      tags: 
        - AdminControl
      summary: Delete a permission group by ID
      parameters:
        - name: groupId
          in: path
          description: ID of the permission group to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Successful operation
  /admin/users/{userId}/permission-groups/{groupId}:
    post:
      tags: 
        - AdminControl
      summary: Assign a permission group to a user
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int64
        - name: groupId
          in: path
          description: ID of the permission group
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation

components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Permission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
    PermissionGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
