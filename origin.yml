openapi: 3.0.0
info:
  title: Simple Inventory API
  version: 1.0.0

paths:
  /items:
    get:
      summary: Get a list of items
      responses:
        '200':
          description: A list of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
    post:
      summary: Add a new item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          description: Item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
  /items/{itemId}:
    get:
      summary: Get the details of an item
      parameters:
        - in: path
          name: itemId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Item details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
    delete:
      summary: Delete an item
      parameters:
        - in: path
          name: itemId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Item deleted successfully

    put:
      summary: Edit item details
      parameters:
        - in: path
          name: itemId
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: Item updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
  /items/{itemId}/tags:
    post:
      summary: Add a tag to an item
      parameters:
        - in: path
          name: itemId
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '201':
          description: Tag added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'

  /items/{itemId}/tags/{tagId}:
    delete:
      summary: Remove a tag from an item
      parameters:
        - in: path
          name: itemId
          schema:
            type: integer
          required: true
        - in: path
          name: tagId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Tag removed successfully
  /items/search:
    get:
      summary: Filter items based on a search query
      parameters:
        - in: query
          name: q
          schema:
            type: string
          required: false
      responses:
        '200':
          description: A list of filtered items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'

  /tags:
    get:
      summary: Get a list of tags
      responses:
        '200':
          description: A list of tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'

  /auth/login:
    post:
      summary: Log in to your account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
  /items/{itemId}/borrow:
    post:
      summary: Borrow an item
      parameters:
        - in: path
          name: itemId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Item borrowed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

  /items/{itemId}/return:
    post:
      summary: Return an item
      parameters:
        - in: path
          name: itemId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Item returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

  /borrowed-items:
    get:
      summary: Get a list of borrowed items
      responses:
        '200':
          description: A list of borrowed items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
  /permissions:
    get:
      summary: Get a list of all permissions
      responses:
        '200':
          description: A list of permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'

  /permission-groups:
    post:
      summary: Create a new permission group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionGroup'
      responses:
        '201':
          description: Permission group created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'

  /permission-groups/{groupId}:
    delete:
      summary: Delete a permission group
      parameters:
        - in: path
          name: groupId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Permission group deleted successfully

  /users/{userId}/permission-groups/{groupId}:
    post:
      summary: Assign a permission group to a user
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
        - in: path
          name: groupId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Permission group assigned to the user successfully
components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    Tag:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    AuthToken:
      type: object
      properties:
        token:
          type: string
    Permission:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    PermissionGroup:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
